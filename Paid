local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Window = Library:CreateWindow({
    Title = 'Auralis | Premium Version',
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    Main = Window:AddTab('Main') 
}

local MainLeftBox = Tabs.Main:AddLeftGroupbox('Auto')
local MainRightBox = Tabs.Main:AddRightGroupbox('Item Settings')

-- Variables to control the auto-sell loop
local autoSellEnabled = false
local sellLoop
local itemID = 4  -- Default item ID
local quantity = 1  -- Default quantity

-- Add sliders for selecting item ID and quantity with text labels
local itemIDSlider = MainRightBox:AddSlider('Item ID Slider', {
    Text = 'Item ID Slider',
    Min = 1,  -- Min item ID (customize as needed)
    Max = 10,  -- Max item ID (customize as needed)
    Default = 4,  -- Default item ID
    Rounding = 1.0,  -- Round to 1 decimal place
    Callback = function(value)
        itemID = value  -- Set item ID to the value selected from the slider
    end
})

local quantitySlider = MainRightBox:AddSlider('Quantity Slider', {
    Text = 'Quantity Slider',
    Min = 1,  -- Min quantity
    Max = 10,  -- Max quantity (adjust as needed)
    Default = 1,  -- Default quantity
    Rounding = 1.0,  -- Round to 1 decimal place
    Callback = function(value)
        quantity = value  -- Set quantity to the value selected from the slider
    end
})

-- Function to start the auto-sell loop
function AutoSell()
    autoSellEnabled = true
    sellLoop = RunService.Heartbeat:Connect(function()
        if autoSellEnabled then
            local args = {
                [1] = itemID,  -- Use dynamic item ID
                [2] = quantity  -- Use dynamic quantity
            }

            -- Fire the SellItem remote
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SellItem"):FireServer(unpack(args))
        else
            -- If auto-sell is disabled, stop the loop
            sellLoop:Disconnect()
        end
    end)
end

-- Function to stop the auto-sell loop
function StopAutoSell()
    autoSellEnabled = false
    if sellLoop then
        sellLoop:Disconnect()  -- Stop the heartbeat loop if it's running
    end
end

-- Add AutoSell toggle
MainLeftBox:AddToggle('AutoSell', {
    Text = "Auto Sell",
    CurrentValue = false,
    Flag = "AutoSell",  -- Used to save the toggle state across sessions
    Callback = function(state)
        if state then
            -- If Auto Sell is enabled, start selling items
            AutoSell()
        else
            -- If Auto Sell is disabled, stop the auto-sell loop
            StopAutoSell()
        end
    end
})
